<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Pending Payments - Nexus ERP</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link
      rel="stylesheet"
      href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
    />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Sora:wght@600;700&family=Inter:wght@400;500&display=swap"
      rel="stylesheet"
    />
    <style>
      body {
        font-family: "Inter", sans-serif;
        background-color: #111111;
        color: #a1a1aa;
      }
      .font-title {
        font-family: "Sora", sans-serif;
      }

      #preloader {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: #111111;
        z-index: 1000;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: opacity 0.5s ease-out;
      }
      .loader {
        width: 48px;
        height: 48px;
        border: 3px solid #1f2937;
        border-top: 3px solid #70ffd9;
        border-radius: 50%;
        animation: spin 1s linear infinite;
      }
      @keyframes spin {
        0% {
          transform: rotate(0deg);
        }
        100% {
          transform: rotate(360deg);
        }
      }
    </style>
  </head>
  <body class="opacity-0 transition-opacity duration-500">
    <div id="preloader"><div class="loader"></div></div>

    <div class="container mx-auto px-4 sm:px-6 lg:px-8 py-12">
      <header class="mb-10 flex justify-between items-center">
        <div>
          <h1 class="text-3xl font-bold text-white font-title">
            Pending Payments
          </h1>
          <p class="text-gray-500 mt-1">
            An overview of your outstanding fees.
          </p>
        </div>
        <a
          href="/dashboard"
          class="bg-gray-800/50 text-gray-300 font-semibold py-2 px-5 rounded-lg hover:bg-gray-700/50 transition-colors inline-flex items-center"
        >
          <i class="fas fa-arrow-left mr-2"></i>
          Return to Dashboard
        </a>
      </header>

      <!-- PENDING FEE ANNOUNCEMENTS GRID -->
      <div
        id="announcements-grid"
        class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6"
      >
        <% if (announcements.length === 0) { %>
        <div
          class="md:col-span-2 lg:col-span-3 text-center py-20 bg-gray-900/50 border border-gray-800 rounded-lg"
        >
          <i class="fas fa-check-circle text-5xl text-emerald-500"></i>
          <h2 class="mt-4 text-2xl font-bold text-white font-title">
            All Caught Up!
          </h2>
          <p class="text-gray-500">
            You have no pending payments at this time.
          </p>
        </div>
        <% } else { %> <% announcements.forEach(announcement => { %>
        <div
          class="payment-card bg-gray-900/50 border border-gray-800 rounded-lg p-6 flex flex-col justify-between transition-all duration-300"
        >
          <div>
            <div class="flex items-start justify-between">
              <div class="flex items-center space-x-3">
                <div
                  class="w-10 h-10 rounded-full bg-emerald-500/10 flex items-center justify-center flex-shrink-0"
                >
                  <i
                    class="fas fa-file-invoice-dollar text-xl text-emerald-400"
                  ></i>
                </div>
                <div>
                  <p class="font-semibold text-white">Fees Notice</p>
                  <p
                    class="time-remaining text-xs text-yellow-400"
                    data-due-date="<%= announcement.due_date %>"
                  >
                    Calculating time...
                  </p>
                </div>
              </div>
              <span class="font-title text-lg font-bold text-emerald-400"
                >â‚¹<%= announcement.amount.toLocaleString('en-IN') %></span
              >
            </div>
            <h3 class="text-lg font-bold text-white font-title mt-4">
              <%= announcement.title %>
            </h3>
            <p class="mt-2 text-gray-400 text-sm leading-relaxed">
              <%= announcement.description %>
            </p>
          </div>
          <div class="mt-6 pt-4 border-t border-gray-800">
            <button
              data-id="<%= announcement._id %>"
              class="pay-now-btn w-full bg-emerald-500 text-black font-bold py-2 px-4 rounded-lg hover:bg-emerald-600 transition-colors"
              style="background-color: #70ffd9"
            >
              Pay Now
            </button>
          </div>
        </div>
        <% }) %> <% } %>
      </div>
    </div>

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        // Pre-loader
        const preloader = document.getElementById("preloader");
        const body = document.querySelector("body");
        window.addEventListener("load", () => {
          preloader.style.opacity = "0";
          body.style.opacity = "1";
          setTimeout(() => {
            preloader.style.display = "none";
          }, 500);
        });

        // "Time Remaining" Counters
        document.querySelectorAll(".time-remaining").forEach((elem) => {
          const dueDate = new Date(elem.dataset.dueDate);
          const now = new Date();
          const diff = dueDate - now;

          if (diff <= 0) {
            elem.textContent = "Due date has passed";
            elem.classList.remove("text-yellow-400");
            elem.classList.add("text-red-400");
            return;
          }

          const days = Math.floor(diff / (1000 * 60 * 60 * 24));
          const hours = Math.floor((diff / (1000 * 60 * 60)) % 24);

          if (days > 1) {
            elem.textContent = `Due in ${days} days`;
          } else if (days === 1) {
            elem.textContent = `Due in 1 day`;
          } else {
            elem.textContent = `Due in ${hours} hours`;
            elem.classList.add("text-orange-400");
          }
        });

        // Payment Button Logic
        document.querySelectorAll(".pay-now-btn").forEach((button) => {
          button.addEventListener("click", async (e) => {
            e.preventDefault();
            const announcementId = button.dataset.id;
            const card = button.closest(".payment-card");

            button.disabled = true;
            button.innerHTML = `<i class="fas fa-spinner fa-spin mr-2"></i>Processing...`;

            try {
              await new Promise((resolve) => setTimeout(resolve, 2500));

              const response = await fetch(
                `/api/v1/payment/record/${announcementId}`,
                { method: "POST" }
              );

              if (!response.ok) {
                throw new Error("Payment successful, but failed to record.");
              }

              button.classList.remove("bg-emerald-500");
              button.classList.add("bg-green-600", "text-white");
              button.innerHTML = `<i class="fas fa-check-circle mr-2"></i>Payment Successful!`;

              // Fade out and remove the card
              card.style.transition =
                "opacity 0.5s ease-out, transform 0.5s ease-out";
              card.style.opacity = "0";
              card.style.transform = "scale(0.95)";
              setTimeout(() => card.remove(), 500);
            } catch (error) {
              console.error("Payment Error:", error);
              button.innerHTML = `Payment successful, but failed to record.`;
              button.classList.remove("bg-emerald-500");
              button.classList.add("bg-red-600", "text-white");
              setTimeout(() => {
                button.disabled = false;
                button.innerHTML = `Try Again`;
                button.classList.remove("bg-red-600");
                button.classList.add("bg-emerald-500");
              }, 3000);
            }
          });
        });
      });
    </script>
  </body>
</html>
